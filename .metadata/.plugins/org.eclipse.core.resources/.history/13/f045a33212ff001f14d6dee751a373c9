package com.order.product.apiservice;

import java.io.IOException;

import org.springframework.stereotype.Service;

import com.order.entity.Product;

import lombok.extern.slf4j.Slf4j;
import retrofit2.Call;
import retrofit2.Response;

@Service
@Slf4j
public class ProductService {

	private ProductApiService productService = RetrofitServiceGenerator.createService(ProductApiService.class);

	public Product getProductById(int id) {
		Product result = new Product(); 
		try {
			Call<Product> product = productService.getProductById(id);
			log.info("Product service call--->" , product);
			Response<Product> response = product.execute();
			log.info("Product service response --->" , response);
			return response.body(); 
		} catch (IOException e) {
			e.printStackTrace();
		}
		return null;
	}

	public boolean updateQuantityOfProductAfterBuying(int productid, int quantity) {
		try {
			Call<Boolean> isQuantityUpdated = productService.updateQuantityOfProduct(productid, quantity);
			Response<Boolean> response = isQuantityUpdated.execute();
			boolean result = response.body();
			return result;
		} catch (Exception e) {
			// TODO: handle exception
		}
		return false;
	}

}
//span id 
//trace id